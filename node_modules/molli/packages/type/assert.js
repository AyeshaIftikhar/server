const SimpleSchema = require('simpl-schema').default
const Argument = require('./argument')
const Enum = require('./enum')
const Extension = require('./extension')
const Field = require('./field')
const Input = require('./input')
const Interface = require('./interface')
const Obj = require('./obj')
const Scalar = require('./scalar')
const Union = require('./union')
const Path = require('./path')

const schemaDef = {
  argument: {
    type: Argument,
    blackbox: true,
  },
  arguments: {
    type: Array,
  },
  'arguments.$': {
    type: Argument,
    blackbox: true,
  },
  enum: {
    type: Enum,
    blackbox: true,
  },
  enums: {
    type: Array,
  },
  'enums.$': {
    type: Enum,
    blackbox: true,
  },
  extension: {
    type: Extension,
    blackbox: true,
  },
  extensions: {
    type: Array,
  },
  'extensions.$': {
    type: Extension,
    blackbox: true,
  },
  field: {
    type: Field,
    blackbox: true,
  },
  fields: {
    type: Array,
  },
  'fields.$': {
    type: Field,
    blackbox: true,
  },
  input: {
    type: Input,
    blackbox: true,
  },
  inputs: {
    type: Array,
  },
  'inputs.$': {
    type: Input,
    blackbox: true,
  },
  interface: {
    type: Interface,
    blackbox: true,
  },
  interfaces: {
    type: Array,
  },
  'interfaces.$': {
    type: Interface,
    blackbox: true,
  },
  obj: {
    type: Obj,
    blackbox: true,
  },
  objs: {
    type: Array,
  },
  'objs.$': {
    type: Obj,
    blackbox: true,
  },
  scalar: {
    type: Scalar,
    blackbox: true,
  },
  scalars: {
    type: Array,
  },
  'scalars.$': {
    type: Scalar,
    blackbox: true,
  },
  union: {
    type: Union,
    blackbox: true,
  },
  unions: {
    type: Array,
  },
  'unions.$': {
    type: Union,
    blackbox: true,
  },
  object: {
    type: Object,
    blackbox: true,
  },
  objects: {
    type: Array,
  },
  'objects.$': {
    type: Object,
    blackbox: true,
  },
  array: {
    type: Array,
  },
  'array.$': {
    type: Object,
    blackbox: true,
  },
  arrays: {
    type: Array,
  },
  'arrays.$': {
    type: Array,
  },
  'arrays.$.$': {
    type: Object,
    blackbox: true,
  },
  string: {
    type: String,
  },
  'strings': {
    type: Array,
  },
  'strings.$': {
    type: String,
  },
  func: {
    type: Object,
    blackbox: true,
  },
  path: {
    type: Path,
    blackbox: true,
  },
  paths: {
    type: Array,
  },
  'paths.$': {
    type: Path,
    blackbox: true,
  }
}

module.exports = {
  validate: (i) => {
    const schema = {}
    Object.keys(i).forEach(k => {
      let posKeys = [k, `${k}.$`, `${k}.$.$`]
      posKeys.forEach(k => {
        if (schemaDef[k]) schema[k] = schemaDef[k]
      })
    })
    new SimpleSchema(schema).validate(i)
  }
}
